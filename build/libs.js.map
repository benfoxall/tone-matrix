{"version":3,"sources":["d3.js","reqwest.js"],"names":["d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","node","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","ownerDocument","createElementNS","namespaceURI","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_window","d3_event_dragSelect","d3_documentElement","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_behavior_dragTouchSubject","d3_behavior_dragMouseSubject","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_identity","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","toLowerCase","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","id","d3_transitionPrototype","namespace","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","document","documentElement","window","childNodes","nodeType","createElement","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selectionRoot","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","view1","d3_transitionInheritId","deltaY","deltaMode","wheelDelta","detail","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","define","amd","module","exports","definition","succeed","protocol","protocolRe","httpsRe","twoHundo","handleReadyState","success","_aborted","_timedOut","noop","setHeaders","http","defaultHeaders","isAFormData","FormData","requestedWith","contentType","setCredentials","withCredentials","generalCallback","lastValue","urlappend","handleJsonp","fn","reqId","uniqid","cbkey","cbval","reqwest","getcallbackPrefix","cbreg","script","doc","loaded","isIE10","win","src","async","htmlFor","onclick","undefined","head","getRequest","toQueryString","sendWait","xDomainRequest","Reqwest","init","setType","complete","resp","timeout","_completeHandlers","getResponseHeader","filteredResponse","globalSetupOptions","dataFilter","eval","parseError","errorCode","reason","_responseArgs","_fulfilled","_successHandler","_fulfillmentHandlers","timedOut","msg","_erred","_errorHandlers","normalize","serial","el","ch","val","tagName","optCb","disabled","checked","selectedIndex","options","selected","eachFormElement","serializeSubtags","tags","fa","byTag","serializeQueryString","serializeArray","serializeHash","hash","buildParams","obj","traditional","rbracket","callbackPrefix","xmlHttpRequest","accept","*","js","ActiveXObject","retry","fail","always","catch","arr","serialize","opt","trad","enc","encodeURIComponent","ajaxSetup"],"mappings":"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","file":"libs.js","sourcesContent":["!function() {\n  var d3 = {\n    version: \"3.5.3\"\n  };\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n  try {\n    d3_array(d3_documentElement.childNodes)[0].nodeType;\n  } catch (e) {\n    d3_array = function(list) {\n      var i = list.length, array = new Array(i);\n      while (i--) array[i] = list[i];\n      return array;\n    };\n  }\n  try {\n    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n  } catch (error) {\n    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n    d3_element_prototype.setAttribute = function(name, value) {\n      d3_element_setAttribute.call(this, name, value + \"\");\n    };\n    d3_element_prototype.setAttributeNS = function(space, local, value) {\n      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n    };\n    d3_style_prototype.setProperty = function(name, value, priority) {\n      d3_style_setProperty.call(this, name, value + \"\", priority);\n    };\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatcher = d3_documentElement.matches || d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n    return d3_selectMatcher.call(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3_selectionRoot;\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    } : function() {\n      return this.ownerDocument.createElementNS(this.namespaceURI, name);\n    };\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  var d3_selectionRoot = d3.select(d3_documentElement);\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  d3_selection_onFilters.forEach(function(k) {\n    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n  });\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n  function d3_event_dragSuppress() {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n        svg = d3.select(\"body\").append(\"svg\").style({\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          margin: 0,\n          padding: 0,\n          border: \"none\"\n        }, \"important\");\n        var ctm = svg[0][0].getScreenCTM();\n        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n        svg.remove();\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  function d3_behavior_dragTouchSubject() {\n    return d3.event.target;\n  }\n  function d3_behavior_dragMouseSubject() {\n    return d3_window;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      });\n      center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress();\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress();\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), \n      d3_selection_interrupt.call(this), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return d3.event.wheelDelta;\n  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n    return -d3.event.detail;\n  }, \"MozMousePixelScroll\");\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  function d3_identity(d) {\n    return d;\n  }\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - point[0], dy = y - point[1], distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, m = candidates.length, x;\n        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3_selectionRoot.transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();","/*!\n  * Reqwest! A general purpose XHR connection manager\n  * license MIT (c) Dustin Diaz 2014\n  * https://github.com/ded/reqwest\n  */\n\n!function (name, context, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else context[name] = definition()\n}('reqwest', this, function () {\n\n  var win = window\n    , doc = document\n    , httpsRe = /^http/\n    , protocolRe = /(^\\w+):\\/\\//\n    , twoHundo = /^(20\\d|1223)$/ //http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n    , byTag = 'getElementsByTagName'\n    , readyState = 'readyState'\n    , contentType = 'Content-Type'\n    , requestedWith = 'X-Requested-With'\n    , head = doc[byTag]('head')[0]\n    , uniqid = 0\n    , callbackPrefix = 'reqwest_' + (+new Date())\n    , lastValue // data stored by the most recent JSONP callback\n    , xmlHttpRequest = 'XMLHttpRequest'\n    , xDomainRequest = 'XDomainRequest'\n    , noop = function () {}\n\n    , isArray = typeof Array.isArray == 'function'\n        ? Array.isArray\n        : function (a) {\n            return a instanceof Array\n          }\n\n    , defaultHeaders = {\n          'contentType': 'application/x-www-form-urlencoded'\n        , 'requestedWith': xmlHttpRequest\n        , 'accept': {\n              '*':  'text/javascript, text/html, application/xml, text/xml, */*'\n            , 'xml':  'application/xml, text/xml'\n            , 'html': 'text/html'\n            , 'text': 'text/plain'\n            , 'json': 'application/json, text/javascript'\n            , 'js':   'application/javascript, text/javascript'\n          }\n      }\n\n    , xhr = function(o) {\n        // is it x-domain\n        if (o['crossOrigin'] === true) {\n          var xhr = win[xmlHttpRequest] ? new XMLHttpRequest() : null\n          if (xhr && 'withCredentials' in xhr) {\n            return xhr\n          } else if (win[xDomainRequest]) {\n            return new XDomainRequest()\n          } else {\n            throw new Error('Browser does not support cross-origin requests')\n          }\n        } else if (win[xmlHttpRequest]) {\n          return new XMLHttpRequest()\n        } else {\n          return new ActiveXObject('Microsoft.XMLHTTP')\n        }\n      }\n    , globalSetupOptions = {\n        dataFilter: function (data) {\n          return data\n        }\n      }\n\n  function succeed(r) {\n    var protocol = protocolRe.exec(r.url);\n    protocol = (protocol && protocol[1]) || window.location.protocol;\n    return httpsRe.test(protocol) ? twoHundo.test(r.request.status) : !!r.request.response;\n  }\n\n  function handleReadyState(r, success, error) {\n    return function () {\n      // use _aborted to mitigate against IE err c00c023f\n      // (can't read props on aborted request objects)\n      if (r._aborted) return error(r.request)\n      if (r._timedOut) return error(r.request, 'Request is aborted: timeout')\n      if (r.request && r.request[readyState] == 4) {\n        r.request.onreadystatechange = noop\n        if (succeed(r)) success(r.request)\n        else\n          error(r.request)\n      }\n    }\n  }\n\n  function setHeaders(http, o) {\n    var headers = o['headers'] || {}\n      , h\n\n    headers['Accept'] = headers['Accept']\n      || defaultHeaders['accept'][o['type']]\n      || defaultHeaders['accept']['*']\n\n    var isAFormData = typeof FormData === 'function' && (o['data'] instanceof FormData);\n    // breaks cross-origin requests with legacy browsers\n    if (!o['crossOrigin'] && !headers[requestedWith]) headers[requestedWith] = defaultHeaders['requestedWith']\n    if (!headers[contentType] && !isAFormData) headers[contentType] = o['contentType'] || defaultHeaders['contentType']\n    for (h in headers)\n      headers.hasOwnProperty(h) && 'setRequestHeader' in http && http.setRequestHeader(h, headers[h])\n  }\n\n  function setCredentials(http, o) {\n    if (typeof o['withCredentials'] !== 'undefined' && typeof http.withCredentials !== 'undefined') {\n      http.withCredentials = !!o['withCredentials']\n    }\n  }\n\n  function generalCallback(data) {\n    lastValue = data\n  }\n\n  function urlappend (url, s) {\n    return url + (/\\?/.test(url) ? '&' : '?') + s\n  }\n\n  function handleJsonp(o, fn, err, url) {\n    var reqId = uniqid++\n      , cbkey = o['jsonpCallback'] || 'callback' // the 'callback' key\n      , cbval = o['jsonpCallbackName'] || reqwest.getcallbackPrefix(reqId)\n      , cbreg = new RegExp('((^|\\\\?|&)' + cbkey + ')=([^&]+)')\n      , match = url.match(cbreg)\n      , script = doc.createElement('script')\n      , loaded = 0\n      , isIE10 = navigator.userAgent.indexOf('MSIE 10.0') !== -1\n\n    if (match) {\n      if (match[3] === '?') {\n        url = url.replace(cbreg, '$1=' + cbval) // wildcard callback func name\n      } else {\n        cbval = match[3] // provided callback func name\n      }\n    } else {\n      url = urlappend(url, cbkey + '=' + cbval) // no callback details, add 'em\n    }\n\n    win[cbval] = generalCallback\n\n    script.type = 'text/javascript'\n    script.src = url\n    script.async = true\n    if (typeof script.onreadystatechange !== 'undefined' && !isIE10) {\n      // need this for IE due to out-of-order onreadystatechange(), binding script\n      // execution to an event listener gives us control over when the script\n      // is executed. See http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\n      script.htmlFor = script.id = '_reqwest_' + reqId\n    }\n\n    script.onload = script.onreadystatechange = function () {\n      if ((script[readyState] && script[readyState] !== 'complete' && script[readyState] !== 'loaded') || loaded) {\n        return false\n      }\n      script.onload = script.onreadystatechange = null\n      script.onclick && script.onclick()\n      // Call the user callback with the last value stored and clean up values and scripts.\n      fn(lastValue)\n      lastValue = undefined\n      head.removeChild(script)\n      loaded = 1\n    }\n\n    // Add the script to the DOM head\n    head.appendChild(script)\n\n    // Enable JSONP timeout\n    return {\n      abort: function () {\n        script.onload = script.onreadystatechange = null\n        err({}, 'Request is aborted: timeout', {})\n        lastValue = undefined\n        head.removeChild(script)\n        loaded = 1\n      }\n    }\n  }\n\n  function getRequest(fn, err) {\n    var o = this.o\n      , method = (o['method'] || 'GET').toUpperCase()\n      , url = typeof o === 'string' ? o : o['url']\n      // convert non-string objects to query-string form unless o['processData'] is false\n      , data = (o['processData'] !== false && o['data'] && typeof o['data'] !== 'string')\n        ? reqwest.toQueryString(o['data'])\n        : (o['data'] || null)\n      , http\n      , sendWait = false\n\n    // if we're working on a GET request and we have data then we should append\n    // query string to end of URL and not post data\n    if ((o['type'] == 'jsonp' || method == 'GET') && data) {\n      url = urlappend(url, data)\n      data = null\n    }\n\n    if (o['type'] == 'jsonp') return handleJsonp(o, fn, err, url)\n\n    // get the xhr from the factory if passed\n    // if the factory returns null, fall-back to ours\n    http = (o.xhr && o.xhr(o)) || xhr(o)\n\n    http.open(method, url, o['async'] === false ? false : true)\n    setHeaders(http, o)\n    setCredentials(http, o)\n    if (win[xDomainRequest] && http instanceof win[xDomainRequest]) {\n        http.onload = fn\n        http.onerror = err\n        // NOTE: see\n        // http://social.msdn.microsoft.com/Forums/en-US/iewebdevelopment/thread/30ef3add-767c-4436-b8a9-f1ca19b4812e\n        http.onprogress = function() {}\n        sendWait = true\n    } else {\n      http.onreadystatechange = handleReadyState(this, fn, err)\n    }\n    o['before'] && o['before'](http)\n    if (sendWait) {\n      setTimeout(function () {\n        http.send(data)\n      }, 200)\n    } else {\n      http.send(data)\n    }\n    return http\n  }\n\n  function Reqwest(o, fn) {\n    this.o = o\n    this.fn = fn\n\n    init.apply(this, arguments)\n  }\n\n  function setType(header) {\n    // json, javascript, text/plain, text/html, xml\n    if (header.match('json')) return 'json'\n    if (header.match('javascript')) return 'js'\n    if (header.match('text')) return 'html'\n    if (header.match('xml')) return 'xml'\n  }\n\n  function init(o, fn) {\n\n    this.url = typeof o == 'string' ? o : o['url']\n    this.timeout = null\n\n    // whether request has been fulfilled for purpose\n    // of tracking the Promises\n    this._fulfilled = false\n    // success handlers\n    this._successHandler = function(){}\n    this._fulfillmentHandlers = []\n    // error handlers\n    this._errorHandlers = []\n    // complete (both success and fail) handlers\n    this._completeHandlers = []\n    this._erred = false\n    this._responseArgs = {}\n\n    var self = this\n\n    fn = fn || function () {}\n\n    if (o['timeout']) {\n      this.timeout = setTimeout(function () {\n        timedOut()\n      }, o['timeout'])\n    }\n\n    if (o['success']) {\n      this._successHandler = function () {\n        o['success'].apply(o, arguments)\n      }\n    }\n\n    if (o['error']) {\n      this._errorHandlers.push(function () {\n        o['error'].apply(o, arguments)\n      })\n    }\n\n    if (o['complete']) {\n      this._completeHandlers.push(function () {\n        o['complete'].apply(o, arguments)\n      })\n    }\n\n    function complete (resp) {\n      o['timeout'] && clearTimeout(self.timeout)\n      self.timeout = null\n      while (self._completeHandlers.length > 0) {\n        self._completeHandlers.shift()(resp)\n      }\n    }\n\n    function success (resp) {\n      var type = o['type'] || resp && setType(resp.getResponseHeader('Content-Type')) // resp can be undefined in IE\n      resp = (type !== 'jsonp') ? self.request : resp\n      // use global data filter on response text\n      var filteredResponse = globalSetupOptions.dataFilter(resp.responseText, type)\n        , r = filteredResponse\n      try {\n        resp.responseText = r\n      } catch (e) {\n        // can't assign this in IE<=8, just ignore\n      }\n      if (r) {\n        switch (type) {\n        case 'json':\n          try {\n            resp = win.JSON ? win.JSON.parse(r) : eval('(' + r + ')')\n          } catch (err) {\n            return error(resp, 'Could not parse JSON in response', err)\n          }\n          break\n        case 'js':\n          resp = eval(r)\n          break\n        case 'html':\n          resp = r\n          break\n        case 'xml':\n          resp = resp.responseXML\n              && resp.responseXML.parseError // IE trololo\n              && resp.responseXML.parseError.errorCode\n              && resp.responseXML.parseError.reason\n            ? null\n            : resp.responseXML\n          break\n        }\n      }\n\n      self._responseArgs.resp = resp\n      self._fulfilled = true\n      fn(resp)\n      self._successHandler(resp)\n      while (self._fulfillmentHandlers.length > 0) {\n        resp = self._fulfillmentHandlers.shift()(resp)\n      }\n\n      complete(resp)\n    }\n\n    function timedOut() {\n      self._timedOut = true\n      self.request.abort()      \n    }\n\n    function error(resp, msg, t) {\n      resp = self.request\n      self._responseArgs.resp = resp\n      self._responseArgs.msg = msg\n      self._responseArgs.t = t\n      self._erred = true\n      while (self._errorHandlers.length > 0) {\n        self._errorHandlers.shift()(resp, msg, t)\n      }\n      complete(resp)\n    }\n\n    this.request = getRequest.call(this, success, error)\n  }\n\n  Reqwest.prototype = {\n    abort: function () {\n      this._aborted = true\n      this.request.abort()\n    }\n\n  , retry: function () {\n      init.call(this, this.o, this.fn)\n    }\n\n    /**\n     * Small deviation from the Promises A CommonJs specification\n     * http://wiki.commonjs.org/wiki/Promises/A\n     */\n\n    /**\n     * `then` will execute upon successful requests\n     */\n  , then: function (success, fail) {\n      success = success || function () {}\n      fail = fail || function () {}\n      if (this._fulfilled) {\n        this._responseArgs.resp = success(this._responseArgs.resp)\n      } else if (this._erred) {\n        fail(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)\n      } else {\n        this._fulfillmentHandlers.push(success)\n        this._errorHandlers.push(fail)\n      }\n      return this\n    }\n\n    /**\n     * `always` will execute whether the request succeeds or fails\n     */\n  , always: function (fn) {\n      if (this._fulfilled || this._erred) {\n        fn(this._responseArgs.resp)\n      } else {\n        this._completeHandlers.push(fn)\n      }\n      return this\n    }\n\n    /**\n     * `fail` will execute when the request fails\n     */\n  , fail: function (fn) {\n      if (this._erred) {\n        fn(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)\n      } else {\n        this._errorHandlers.push(fn)\n      }\n      return this\n    }\n  , 'catch': function (fn) {\n      return this.fail(fn)\n    }\n  }\n\n  function reqwest(o, fn) {\n    return new Reqwest(o, fn)\n  }\n\n  // normalize newline variants according to spec -> CRLF\n  function normalize(s) {\n    return s ? s.replace(/\\r?\\n/g, '\\r\\n') : ''\n  }\n\n  function serial(el, cb) {\n    var n = el.name\n      , t = el.tagName.toLowerCase()\n      , optCb = function (o) {\n          // IE gives value=\"\" even where there is no value attribute\n          // 'specified' ref: http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-862529273\n          if (o && !o['disabled'])\n            cb(n, normalize(o['attributes']['value'] && o['attributes']['value']['specified'] ? o['value'] : o['text']))\n        }\n      , ch, ra, val, i\n\n    // don't serialize elements that are disabled or without a name\n    if (el.disabled || !n) return\n\n    switch (t) {\n    case 'input':\n      if (!/reset|button|image|file/i.test(el.type)) {\n        ch = /checkbox/i.test(el.type)\n        ra = /radio/i.test(el.type)\n        val = el.value\n        // WebKit gives us \"\" instead of \"on\" if a checkbox has no value, so correct it here\n        ;(!(ch || ra) || el.checked) && cb(n, normalize(ch && val === '' ? 'on' : val))\n      }\n      break\n    case 'textarea':\n      cb(n, normalize(el.value))\n      break\n    case 'select':\n      if (el.type.toLowerCase() === 'select-one') {\n        optCb(el.selectedIndex >= 0 ? el.options[el.selectedIndex] : null)\n      } else {\n        for (i = 0; el.length && i < el.length; i++) {\n          el.options[i].selected && optCb(el.options[i])\n        }\n      }\n      break\n    }\n  }\n\n  // collect up all form elements found from the passed argument elements all\n  // the way down to child elements; pass a '<form>' or form fields.\n  // called with 'this'=callback to use for serial() on each element\n  function eachFormElement() {\n    var cb = this\n      , e, i\n      , serializeSubtags = function (e, tags) {\n          var i, j, fa\n          for (i = 0; i < tags.length; i++) {\n            fa = e[byTag](tags[i])\n            for (j = 0; j < fa.length; j++) serial(fa[j], cb)\n          }\n        }\n\n    for (i = 0; i < arguments.length; i++) {\n      e = arguments[i]\n      if (/input|select|textarea/i.test(e.tagName)) serial(e, cb)\n      serializeSubtags(e, [ 'input', 'select', 'textarea' ])\n    }\n  }\n\n  // standard query string style serialization\n  function serializeQueryString() {\n    return reqwest.toQueryString(reqwest.serializeArray.apply(null, arguments))\n  }\n\n  // { 'name': 'value', ... } style serialization\n  function serializeHash() {\n    var hash = {}\n    eachFormElement.apply(function (name, value) {\n      if (name in hash) {\n        hash[name] && !isArray(hash[name]) && (hash[name] = [hash[name]])\n        hash[name].push(value)\n      } else hash[name] = value\n    }, arguments)\n    return hash\n  }\n\n  // [ { name: 'name', value: 'value' }, ... ] style serialization\n  reqwest.serializeArray = function () {\n    var arr = []\n    eachFormElement.apply(function (name, value) {\n      arr.push({name: name, value: value})\n    }, arguments)\n    return arr\n  }\n\n  reqwest.serialize = function () {\n    if (arguments.length === 0) return ''\n    var opt, fn\n      , args = Array.prototype.slice.call(arguments, 0)\n\n    opt = args.pop()\n    opt && opt.nodeType && args.push(opt) && (opt = null)\n    opt && (opt = opt.type)\n\n    if (opt == 'map') fn = serializeHash\n    else if (opt == 'array') fn = reqwest.serializeArray\n    else fn = serializeQueryString\n\n    return fn.apply(null, args)\n  }\n\n  reqwest.toQueryString = function (o, trad) {\n    var prefix, i\n      , traditional = trad || false\n      , s = []\n      , enc = encodeURIComponent\n      , add = function (key, value) {\n          // If value is a function, invoke it and return its value\n          value = ('function' === typeof value) ? value() : (value == null ? '' : value)\n          s[s.length] = enc(key) + '=' + enc(value)\n        }\n    // If an array was passed in, assume that it is an array of form elements.\n    if (isArray(o)) {\n      for (i = 0; o && i < o.length; i++) add(o[i]['name'], o[i]['value'])\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in o) {\n        if (o.hasOwnProperty(prefix)) buildParams(prefix, o[prefix], traditional, add)\n      }\n    }\n\n    // spaces should be + according to spec\n    return s.join('&').replace(/%20/g, '+')\n  }\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name, i, v\n      , rbracket = /\\[\\]$/\n\n    if (isArray(obj)) {\n      // Serialize array item.\n      for (i = 0; obj && i < obj.length; i++) {\n        v = obj[i]\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v)\n        } else {\n          buildParams(prefix + '[' + (typeof v === 'object' ? i : '') + ']', v, traditional, add)\n        }\n      }\n    } else if (obj && obj.toString() === '[object Object]') {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + '[' + name + ']', obj[name], traditional, add)\n      }\n\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj)\n    }\n  }\n\n  reqwest.getcallbackPrefix = function () {\n    return callbackPrefix\n  }\n\n  // jQuery and Zepto compatibility, differences can be remapped here so you can call\n  // .ajax.compat(options, callback)\n  reqwest.compat = function (o, fn) {\n    if (o) {\n      o['type'] && (o['method'] = o['type']) && delete o['type']\n      o['dataType'] && (o['type'] = o['dataType'])\n      o['jsonpCallback'] && (o['jsonpCallbackName'] = o['jsonpCallback']) && delete o['jsonpCallback']\n      o['jsonp'] && (o['jsonpCallback'] = o['jsonp'])\n    }\n    return new Reqwest(o, fn)\n  }\n\n  reqwest.ajaxSetup = function (options) {\n    options = options || {}\n    for (var k in options) {\n      globalSetupOptions[k] = options[k]\n    }\n  }\n\n  return reqwest\n});\n"],"sourceRoot":"/source/"}